[gcode_macro _USER_VARIABLES_OTHER]
# Enable verbose output to let the macro have a chat
variable_verbose: True

# Do not remove the next line
gcode:


#####################################################################
# Heat soak chamber - leave on/off heater when done
#####################################################################

[gcode_macro HEATSOAK_CHAMBER]
description: Heatsoak chamber to a specific temperature with a timeout
#HEATSOAK_CHAMBER TEMP=50 SOAKTIME=2 COOLDOWN=1
gcode:
    {% set TEMP = params.TEMP|default(40)|int %}
    {% set TIME = params.SOAKTIME|default(5)|int %}
    {% set COOLDOWN = params.COOLDOWN|default(0)|int %}

    M106 S128; switch part cooling ~% to move air in the chamber

    #delayed_gcode 
    #poll the bed temperature and turn

# one solution:  manualy start when its warmed up
#[gcode_macro heat_soak]
#gcode:
#        G28
#        G1 Z10
#        G1 X125 Y125 F6000
#        M140 S110  


#another solution is this
#M114 S{BedTemp}
#if chamberTemp < 50C:
#  temperature_wait sensor=ChamberTempSensor Temperature=50
#else if chamberTemp > 60C:
#  set_fan fan=Exhaust speed=1.0
#  temperature_wait sensor=ChamberTempSensor Temperature=50



    {% for _ in range(1, TIME) %}
        {% set CURRENT_TEMP = printer["temperature_fan chamber"].temperature %}

        {% if CURRENT_TEMP > TEMP %}
          M118 greater than
        {% elif CURRENT_TEMP < TEMP %}
          M118 less than
        {% elif CURRENT_TEMP == TEMP %}
          M118 it equals
        {% endif %}    

            #_WAIT_CHAMBER_TEMP TEMP={TEMP}
    {% endfor %}
    RESPOND MSG="Chamber temperature OK !"
    {% if _COOLDOWN %}
        RESPOND MSG="Release Temp."
        M106 S255
    {% endif %}


[gcode_macro _WAIT_CHAMBER_TEMP]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:

    {% set CURRENT_TEMP=printer["temperature_fan chamber"].temperature %}
    

    {% set chamber_sensor_name = printer["gcode_macro _USER_VARIABLES_OTHER"].chamber_temperature_sensor_name %}
        M118 here WAIT CHAMBER TEMP
        {% set SETPOINT_TEMP = params.TEMP|default(40)|float %}
        M118 SETPOINT =  {SETPOINT_TEMP}
        M118 {printer["temperature_fan chamber"].temperature}

#        {% set CURRENT_TEMP = printer["temperature_sensor" ~ chamber_sensor_name].temperature|float %}

#        {% if CURRENT_TEMP <= SETPOINT_TEMP %}
#            RESPOND MSG="Heating chamber: {CURRENT_TEMP} < {SETPOINT_TEMP}"
#            G4 P{60000 * 1} # wait a minute and check again if called in a loop
#        {% endif %}
#    {% endif %}


#####################################################################
# Heat soak bed - leave on/off when done
#####################################################################

[gcode_macro HEATSOAK_BED]
description: Heatsoak bed at specified temperature and wait for a specific amount of time
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|int %}
    {% set TIME = params.SOAKTIME|default(8)|int %}
    {% set _COOLDOWN = params.COOLDOWN|default(8)|int %}


    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}

    {% if verbose %}
        RESPOND MSG="Heating up bed..."
    {% endif %}

    M190 S{SETPOINT_TEMP}

    {% if TIME > 0 %}
        {% for _ in range(1, TIME) %}
            RESPOND MSG="Heatsoak: {_} of {TIME} min"
            G4 P{60000 * 1}
        {% endfor %}
    {% else %}
        RESPOND MSG="No heatsoak needed, continue"
    {% endif %}
    
    {% if verbose %}
        RESPOND MSG="Bed temperature OK."
        {% if _COOLDOWN %}
          RESPOND MSG="Release Temp."
          M190 S0
        {% endif %}
    {% endif %}